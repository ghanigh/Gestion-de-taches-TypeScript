openapi: 3.0.0
info:
  title: Tasks API
  description: API Backend for Tasks Website
  version: 1.0.0
servers:
  - url: http://localhost:5678/api/
paths:
  /users/signup:
    post:
      summary: Sign Up the user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User Created"
  /users/login:
    post:
      summary: Log In the user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                    format: int64
                    example: 1
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlhdCI6MTY1MTg3NDkzOSwiZXhwIjoxNjUxOTYxMzM5fQ.JGN1p8YIfR-M-5eQ-Ypy6Ima5cKA4VbfL2xMr2MgHm4
        '404':
          description: User not found
        '401':
          description: Not Authorized
  /categories:
    get:
      summary: Returns all categories
      responses:
        '200':
          description: Returns an array of all categories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                      example: 1
                    name:
                      type: string
                      example: "Objets"
        '500':
          description: Unexpected Error
    post:
      summary: create new category
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Create a new category
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 1
                  name:
                    type: string
                    example: "Test category"
        '500':
          description: Unexpected Error
  /tasks:
    get:
      summary: Returns all tasks
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Returns an array of all tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                      example: 1
                    title:
                      type: string
                      example: "Tache numero 1"
                    categoryId:
                      type: integer
                      format: int64
                      example: 1
                    userId:
                      type: integer
                      format: int64
                      example: 1
                    createdAt:
                      type: timestamp
                      example: "2024-04-21T20:58:20.129Z"
                    category:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                          example: 1
                        name:
                          type: string
                          example: "A faire"
                    done:
                      type: boolean
                      example: false
                    expiration:
                      type: string
                      format: date-time
                      example: "2024-04-22T00:00:00Z"
        '500':
          description: Unexpected Error
    post:
      summary: Send a new task
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                priority:
                  type: integer
                  format: int64 
                category:
                  type: integer
                  format: int64
                done:
                  type: boolean
                expiration:
                  type: string
                  format: date-time
    responses:
      '201':
        description: Created
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                title:
                  type: string
                content:
                  type: string
                priority:
                  type: integer
                  format: int64
                categoryId:
                  type: string
                userId:
                  type: integer
                  format: int64
                done:
                  type: boolean
                expiration:
                  type: string
                  format: date-time
      '500':
        description: Unexpected Error
      '401':
        description: Unauthorized
      '400':
        description: Bad Request
  /tasks/{id}:
    delete:
      summary: Delete a task depending on id
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: id of task to be deleted
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Item Deleted
        '401':
          description: Unauthorized
        '500':
          description: Unexpected Behaviour
    put:
      summary: Update a task by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the task to update
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                priority:
                  type: integer
                  format: int64 
                category:
                  type: integer
                  format: int64
                done:
                  type: boolean
                expiration:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 1
                  title:
                    type: string
                    example: "Task title"
                  content:
                    type: string
                    example: "Task content"
                  priority:
                    type: integer
                    format: int64
                    example: 1
                  categoryId:
                    type: integer
                    format: int64
                    example: 1
                  userId:
                    type: integer
                    format: int64
                    example: 1
                  done:
                    type: boolean
                    example: false
                  expiration:
                    type: string
                    format: date-time
                    example: "2024-04-22T00:00:00Z"
components:
  securitySchemes:
   BearerAuth:
     type: http
     scheme: bearer
securityDefinitions:
  Bearer:
    type: JWT
    name: Authorization
    in: header
